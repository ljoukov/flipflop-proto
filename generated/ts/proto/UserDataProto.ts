/* eslint-disable */
// @generated by protobuf-ts 2.8.1 with parameter eslint_disable,long_type_string,ts_nocheck
// @generated from protobuf file "UserDataProto.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * @generated from protobuf message StoryUserDataProto
 */
export interface StoryUserDataProto {
    /**
     * @generated from protobuf field: string story_id = 1;
     */
    storyId: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp last_modified_at = 2;
     */
    lastModifiedAt?: Timestamp;
    /**
     * @generated from protobuf field: bool liked = 3;
     */
    liked: boolean;
}
// @generated message type with reflection information, may provide speed optimized methods
class StoryUserDataProto$Type extends MessageType<StoryUserDataProto> {
    constructor() {
        super("StoryUserDataProto", [
            { no: 1, name: "story_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "last_modified_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "liked", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<StoryUserDataProto>): StoryUserDataProto {
        const message = { storyId: "", liked: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StoryUserDataProto>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StoryUserDataProto): StoryUserDataProto {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string story_id */ 1:
                    message.storyId = reader.string();
                    break;
                case /* google.protobuf.Timestamp last_modified_at */ 2:
                    message.lastModifiedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.lastModifiedAt);
                    break;
                case /* bool liked */ 3:
                    message.liked = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StoryUserDataProto, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string story_id = 1; */
        if (message.storyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.storyId);
        /* google.protobuf.Timestamp last_modified_at = 2; */
        if (message.lastModifiedAt)
            Timestamp.internalBinaryWrite(message.lastModifiedAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool liked = 3; */
        if (message.liked !== false)
            writer.tag(3, WireType.Varint).bool(message.liked);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message StoryUserDataProto
 */
export const StoryUserDataProto = new StoryUserDataProto$Type();
