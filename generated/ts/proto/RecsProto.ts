/* eslint-disable */
// @generated by protobuf-ts 2.9.1 with parameter eslint_disable,long_type_string,ts_nocheck
// @generated from protobuf file "RecsProto.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * @generated from protobuf message StoryEmbedProto
 */
export interface StoryEmbedProto {
    /**
     * @generated from protobuf field: string story_id = 1;
     */
    storyId: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: EmbedTypeProto embed_type = 3;
     */
    embedType: EmbedTypeProto;
    /**
     * @generated from protobuf field: bytes input_hash = 4;
     */
    inputHash: Uint8Array;
    /**
     * @generated from protobuf field: repeated float embedding = 5 [packed = true];
     */
    embedding: number[];
}
/**
 * @generated from protobuf message StoriesEmbedCacheProto
 */
export interface StoriesEmbedCacheProto {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp created_at = 1;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: repeated StoryEmbedProto embed = 2;
     */
    embed: StoryEmbedProto[];
}
/**
 * @generated from protobuf enum EmbedTypeProto
 */
export enum EmbedTypeProto {
    /**
     * @generated from protobuf enum value: EMBED_TYPE_UNKNOWN = 0;
     */
    EMBED_TYPE_UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: EMBED_TYPE_ADA_002 = 1;
     */
    EMBED_TYPE_ADA_002 = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class StoryEmbedProto$Type extends MessageType<StoryEmbedProto> {
    constructor() {
        super("StoryEmbedProto", [
            { no: 1, name: "story_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "embed_type", kind: "enum", T: () => ["EmbedTypeProto", EmbedTypeProto] },
            { no: 4, name: "input_hash", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 5, name: "embedding", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
    create(value?: PartialMessage<StoryEmbedProto>): StoryEmbedProto {
        const message = { storyId: "", embedType: 0, inputHash: new Uint8Array(0), embedding: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StoryEmbedProto>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StoryEmbedProto): StoryEmbedProto {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string story_id */ 1:
                    message.storyId = reader.string();
                    break;
                case /* google.protobuf.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* EmbedTypeProto embed_type */ 3:
                    message.embedType = reader.int32();
                    break;
                case /* bytes input_hash */ 4:
                    message.inputHash = reader.bytes();
                    break;
                case /* repeated float embedding = 5 [packed = true];*/ 5:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.embedding.push(reader.float());
                    else
                        message.embedding.push(reader.float());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StoryEmbedProto, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string story_id = 1; */
        if (message.storyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.storyId);
        /* google.protobuf.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* EmbedTypeProto embed_type = 3; */
        if (message.embedType !== 0)
            writer.tag(3, WireType.Varint).int32(message.embedType);
        /* bytes input_hash = 4; */
        if (message.inputHash.length)
            writer.tag(4, WireType.LengthDelimited).bytes(message.inputHash);
        /* repeated float embedding = 5 [packed = true]; */
        if (message.embedding.length) {
            writer.tag(5, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.embedding.length; i++)
                writer.float(message.embedding[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message StoryEmbedProto
 */
export const StoryEmbedProto = new StoryEmbedProto$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StoriesEmbedCacheProto$Type extends MessageType<StoriesEmbedCacheProto> {
    constructor() {
        super("StoriesEmbedCacheProto", [
            { no: 1, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 2, name: "embed", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => StoryEmbedProto }
        ]);
    }
    create(value?: PartialMessage<StoriesEmbedCacheProto>): StoriesEmbedCacheProto {
        const message = { embed: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StoriesEmbedCacheProto>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StoriesEmbedCacheProto): StoriesEmbedCacheProto {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Timestamp created_at */ 1:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* repeated StoryEmbedProto embed */ 2:
                    message.embed.push(StoryEmbedProto.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StoriesEmbedCacheProto, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.Timestamp created_at = 1; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated StoryEmbedProto embed = 2; */
        for (let i = 0; i < message.embed.length; i++)
            StoryEmbedProto.internalBinaryWrite(message.embed[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message StoriesEmbedCacheProto
 */
export const StoriesEmbedCacheProto = new StoriesEmbedCacheProto$Type();
