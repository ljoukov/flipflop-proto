syntax = "proto3";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

message ChatApiRequestProto {
  string encoded_user_auth = 1;
  oneof request {
    GetChatBotsRequestProto get_chat_bots = 2;
    ListChatsRequestProto list_chats = 3;
    GetChatMessagesRequestProto get_chat_messages = 4;
  }
}

message ChatApiResponseProto {
  // If present the token was refreshed and the client should use this new one from now onwards.
  string refreshed_encoded_user_auth = 1;
  oneof response {
    GetChatBotsResponseProto get_chat_bots = 2;
    ListChatsResponseProto list_chats = 3;
    GetChatMessagesResponseProto get_chat_messages = 4;
  }
  map<string, google.protobuf.Duration> latencies = 100;
}

message ChatStreamApiRequestProto {
  string encoded_user_auth = 1;
  oneof request {
    PostChatMessageRequestProto post_chat_message = 2;
    OpenChatRequestProto open_chat = 3;
  }
}

message ChatStreamApiResponseHeaderProto {
  // If present the token was refreshed and the client should use this new one from now onwards.
  string refreshed_encoded_user_auth = 1;
  oneof header {
    PostChatMessageResponseHeaderProto post_chat_message_header = 2;
    OpenChatResponseHeaderProto open_chat_header = 3;
  }
  map<string, google.protobuf.Duration> latencies = 100;
}

message ChatStreamApiResponseDeltaProto {
  oneof response_delta {
    ChatAssistantMessageDeltaProto assistant = 1;
  }
}

message GetChatBotsRequestProto {
  ChatBotProto.Type type = 1;
}

message GetChatBotsResponseProto {
  repeated ChatBotProto bots = 1;
}

message ListChatsRequestProto {
  google.protobuf.Timestamp last_modified_after = 1;
}

message ChatSnippetProto {
  string chat_id = 1;
  string text = 2;
}

message ListChatsResponseProto {
  repeated ChatSnippetProto snippets = 1;
}

message GetChatMessagesRequestProto {
  string chat_id = 1;
}

message GetChatMessagesResponseProto {
  repeated ChatMessageProto messages = 1;
}

message PostChatMessageRequestProto {
  string chat_id = 1;
  ChatUserMessageProto user_message = 2;

  // move to settings
  ChatModelProto chat_model = 50;
}

message PostChatMessageResponseHeaderProto {
  repeated ChatMessageProto messages = 1;
  string streamed_message_id = 2; 
}

enum ChatModelProto {
  CHAT_MODEL_UNKNOWN = 0;
  CHAT_MODEL_GPT_35_TURBO = 1;
  CHAT_MODEL_GPT_4 = 2;
}

message ChatStoryActivityIdProto {
  string story_id = 1;
  string activity_id = 2;
}

message OpenChatRequestProto {
  bool restart = 1;

  oneof type {
    // open specific activity
    string chat_id = 2;

    // prompt-less global bot
    string bot_id = 3;

    // activities for a story
    string story_id = 4;

    // activity for a story
    ChatStoryActivityIdProto story_activity_id = 5;

    // start chat with this user message
    ChatUserMessageProto user_message = 6;
  }

  // move to settings
  ChatModelProto chat_model = 50;
}

message OpenChatResponseHeaderProto {
  string chat_id = 1;
  repeated ChatMessageProto messages = 2;
  string streamed_message_id = 3; 
}

message ChatAssistantMessageDeltaProto {
  oneof delta {
    // Append current text block.
    string text_delta = 1;
    // Append activity to the current block.
    // Start a new block on next text_delta.
    ChatActivityIntroProto activity = 2;
  }
}

message ChatBotProto {
  enum Type {
    UNDEFINED = 0;
    STORY_BOT = 1;
    GLOBAL_BOT = 2;
  }
  string bot_id = 1;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp last_modified_at = 6;
  Type type = 7;
  string display_name = 2;
  string description_prompt = 3;
  ChatActivitiesProto activities = 4;
}

message ChatActivitiesProto {
  string description_prompt = 1;
  repeated ChatActivityProto activities = 2;
}

message ChatActivityProto {
  // Machine identifier, LLM-readable, e.g. "compare-and-contrast", "writing-challenge"
  string activity_id =  1;
  // How it should be diplayed to the user
  string display_name = 2;
  string description_prompt = 3;
  string action_prompt = 4;
}

message ChatActivityIntroProto {
  string activity_id = 1;
  string display_name = 2;
}

message ChatAssistantMessageBlockProto {
  string text = 1;
  repeated ChatActivityIntroProto activities = 2;
}

message ChatAssistantMessageProto {
  repeated ChatAssistantMessageBlockProto blocks = 1;
}

message ChatUserMessageProto {
  // Explicitly entered by the user
  string text = 1;

  // User selected one of the activities
  string activity_id = 2;
}

message ChatMessageProto {
  string message_id = 1;
  google.protobuf.Timestamp created_at = 2;
  oneof type {
    ChatAssistantMessageProto assistant = 3;
    ChatUserMessageProto user = 4;
  }
}

message ChatSessionProto {
  string chat_session_id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp last_modified_at = 3;
  string story_id = 4;
  string bot_id = 5;
  reserved 6;
  repeated ChatMessageProto messages = 7;
}
