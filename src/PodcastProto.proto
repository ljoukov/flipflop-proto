syntax = "proto3";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

message PodcastStreamApiRequestProto {
  string encoded_user_auth = 1;
  oneof request {
    CreatePodcastRequestProto create = 2;
    GeneratePodcastRequestProto generate = 3;
    ListPodcastsRequestProto list = 4;
  }
}

message PodcastStreamApiResponseHeaderProto {
  // If present the token was refreshed and the client should use this new one
  // from now onwards.
  string refreshed_encoded_user_auth = 1;
  oneof header {
    CreatePodcastResponseHeaderProto create_header = 2;
    GeneratePodcastResponseHeaderProto generate = 3;
    ListPodcastsResponseHeaderProto list = 4;
  }
  map<string, google.protobuf.Duration> latencies = 100;
}

message PodcastStreamApiResponseDeltaProto {
  oneof response_delta {
    CreatePodcastResponseDeltaProto create_delta = 1;
    GeneratePodcastResponseDeltaProto generate_delta = 2;
    ListPodcastsResponseDeltaProto list_delta = 3;
  }
}

message CreatePodcastRequestProto {
  string prompt = 1;
}

message CreatePodcastResponseHeaderProto {}

message CreatePodcastResponseDeltaProto {
  oneof type {
    bool separator = 1;

    // This is the last delta message
    bool error_no_topic = 2;

    // IDs start at 10
    PodcastProto podcast = 10;

    PodcastPromptAnswerProto answer = 11;
  }
}

message GeneratePodcastRequestProto {
  string podcast_id = 1;
  int32 duration_seconds = 2;
}

message GeneratePodcastResponseHeaderProto {}

message GeneratePodcastResponseDeltaProto {
  oneof type {
    PodcastProto podcast = 1;
  }
}

message ListPodcastsRequestProto {}

message ListPodcastsResponseHeaderProto {
  repeated PodcastProto podcasts = 1;
}

message ListPodcastsResponseDeltaProto {
  oneof type {
    bool ping = 1;
    PodcastProto updated_podcast = 2;
    string deleted_podcast_id = 3;
  }
}

message PodcastProto {
  string podcast_id = 1;

  string created_by = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;

  bool is_ready = 5;
  string display_status = 6;

  PodcastThumbnailProto thumbnail = 7;

  PodcastAudioProto audio = 8;

  PodcastVisualsProto visuals = 9;
  PodcastTranscriptProto transcript = 10;

  repeated PodcastCardProto cards = 11;
}

message PodcastThumbnailProto {
  string title = 7;
  PodcastBadgeProto badge = 8;
}

enum PodcastBadgeProto {
  PODCAST_BADGE_PROTO_UNDEFINED = 0;
  PODCAST_BADGE_PROTO_NONE = 1;
  PODCAST_BADGE_PROTO_LISTEN = 2;
  PODCAST_BADGE_PROTO_POLL = 3;
}

message PodcastAudioProto {
  string audio_path = 1;
  google.protobuf.Duration audio_duration = 2;
}

message PodcastCardProto {
  oneof type {
    PodcastMultipleChoiceCardProto multiple_choice = 1;
    PodcastPollCardProto poll = 2;
  }
}

message PodcastPromptAnswerProto {
  string text = 1;
}

message PodcastVisualsProto {
  string thumbnail_path = 1;
  repeated PodcastVisualProto visuals = 2;
}

message PodcastVisualProto {
  int32 timestamp_millis = 1;
  string image_path = 2;
  PodcastVisualAnimationProto animation = 4;
  PodcastVisualTransitionProto transition = 3;
}

message PodcastVisualAnimationProto {
  int32 duration_millis = 1;
  float start_scale = 2;
  float end_scale = 3;
}

enum PodcastVisualTransitionProto {
  PODCAST_VISUAL_TRANSITION_PROTO_UNDEFINED = 0;
  PODCAST_VISUAL_TRANSITION_PROTO_DISSOLVE = 1;
  PODCAST_VISUAL_TRANSITION_PROTO_SWIPE = 2;
  PODCAST_VISUAL_TRANSITION_PROTO_BAR_SWIPE = 3;
  PODCAST_VISUAL_TRANSITION_PROTO_PAGE_CURL = 4;
}

message PodcastTranscriptProto {
  repeated PodcastTranscriptEntryProto entries = 1;
}

message PodcastTranscriptEntryProto {
  PodcastHostProto host = 1;
  repeated PodcastWordProto words = 2;
}

enum PodcastHostProto {
  PODCAST_HOST_PROTO_UNKNOWN = 0;
  PODCAST_HOST_PROTO_MALE = 1;
  PODCAST_HOST_PROTO_FEMALE = 2;
}

message PodcastWordProto {
  string word = 1;
  int32 start_millis = 2;
  int32 end_millis = 3;
  string separator = 4;
}

// 2: True/False, 3: A/B/C or 4: 1/2/3/4 user input
message PodcastMultipleChoiceCardProto {
  string title = 1;
  string title_emoji = 2;

  string question = 3;
  repeated PodcastMultipleChoiceOptionProto options = 4;
  int32 correct_answer_number = 5;  // starts from 1.

  // Short hint for the whole question
  string hint = 6;

  // Whole page explanation
  string explanation = 7;
}

message PodcastMultipleChoiceOptionProto {
  // Could be a label like True/False or a short sentence
  string text = 1;

  // Short text to show if this answer is selected.
  string hint = 2;
}

// 2, 3 or 4 options to vote for
message PodcastPollCardProto {
  string title = 1;
  string title_emoji = 2;

  string question = 3;
  repeated PodcastPollOptionProto options = 4;
  string commentary = 5;
}

message PodcastPollOptionProto {
  string text = 1;

  // Fraction of votes this option received
  float votes_frac = 2;
}
